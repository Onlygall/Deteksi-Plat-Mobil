# -*- coding: utf-8 -*-
"""Model Plat Mobil.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1thIxKVo--MZw1HBtJAjN_oBcHqOP-jiF
"""

!pip install ultralytics --upgrade

import pandas as pd
import numpy as np
import os
import matplotlib.pyplot as plt
from ultralytics import YOLO
import cv2

"""Dataset di Kaggle"""

from google.colab import files
files.upload()

# Pindahkan dan beri izin akses
!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json

# Install library kaggle
!pip install -q kaggle

# Download dataset (ganti dengan nama dataset sesuai)
!kaggle datasets download -d ronakgohil/license-plate-dataset --unzip

print(os.listdir("archive"))

data = '/content/archive'

"""Pembuatan path"""

# Membuat path
IMG_data = os.path.join(data, 'images')
LABELS_data = os.path.join(data, 'labels')
CLASSES_data = os.path.join(data, 'classes.txt')
YAML_data = os.path.join(data, 'dataset.yaml')

# Images path
TRAIN_IMG_data = os.path.join(data, 'images', 'train')
VAL_IMG_data = os.path.join(data, 'images', 'val')

# Labels path
TRAIN_LABELS_data = os.path.join(data, 'labels', 'train')
VAL_LABELS_data = os.path.join(data, 'labels', 'val')

# Cek path
def cek_path(IMG_data, LABELS_data):
    if os.path.exists(IMG_data) and os.path.isdir(IMG_data):
        print(f"Directory '{IMG_data}' exists and is a directory.")
        for item in os.listdir(IMG_data):
            print(item)
    else:
        print(f"Directory '{IMG_data}' does not exist or is not a directory.")

    if os.path.exists(LABELS_data) and os.path.isdir(LABELS_data):
        print(f"Directory '{LABELS_data}' exists and is a directory.")
        for item in os.listdir(LABELS_data):
            print(item)
    else:
        print(f"Directory '{LABELS_data}' does not exist or is not a directory.")

cek_path(IMG_data, LABELS_data)

"""Menyesuaikan file yaml"""

# Read and display the content of the dataset.yaml file
with open(YAML_data, 'r') as f:
    content = f.read()
    print("Original dataset.yaml content:")
    print(content)

# Correct the nc value and paths in the content
corrected_content = content.replace('nc: 1,', 'nc: 1')
corrected_content = corrected_content.replace('/kaggle/input/license-plate-dataset/archive/images/train', '/content/archive/images/train')
corrected_content = corrected_content.replace('/kaggle/input/license-plate-dataset/archive/images/val', '/content/archive/images/val')


# Write the corrected content back to the file
with open(YAML_data, 'w') as f:
    f.write(corrected_content)

print("\nCorrected dataset.yaml content:")
print(corrected_content)

# Load model YOLOv8 base (versi object detection)
model = YOLO('yolov8n.yaml')  # atau 'yolov8s.pt' untuk versi kecil, atau 'yolov8m.pt'

# Melatih model dengan dataset kamu
model.train(data=YAML_data, epochs=50, imgsz=640)

# Ganti dengan path run kamu (misal train)
run_path = '/content/runs/detect/train'  # Sesuaikan

# File gambar hasil pelatihan
plot_files = {
    'Results': 'results.png',
    'Precision Recall Curve': 'PR_curve.png',
    'F1 Curve': 'F1_curve.png',
    'Confusion Matrix': 'confusion_matrix.png'
}

# Tampilkan semua file hasil training jika ada
for title, filename in plot_files.items():
    filepath = os.path.join(run_path, filename)
    if os.path.exists(filepath):
        img = cv2.imread(filepath)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        plt.figure(figsize=(10, 6))
        plt.imshow(img)
        plt.title(title)
        plt.axis('off')
        plt.show()
    else:
        print(f"File {filename} tidak ditemukan di {run_path}")

# Load model hasil pelatihan (otomatis disimpan di runs/)
model = YOLO('/content/runs/detect/train/weights/best.pt')